  bool isPossible(vector<int>&nums,int mid, int h)
    {
        long long totalHours=0;
        int n=nums.size();
        for(int i=0; i<n; i++)
        {
            totalHours+=ceil(double(nums[i])/double(mid));
        }
        return totalHours<=h;

    }
public:
    int minEatingSpeed(vector<int>& piles, int h) {
        int low=1;
        int high=*max_element(piles.begin(), piles.end());
        int ans=0;
        while(low<=high)
        {
            int mid=(low+high)/2;
            if(isPossible(piles,mid,h))
            {
                ans=mid;
                high=mid-1;
            }
            else low=mid+1;
        }
        return ans; 
    }
